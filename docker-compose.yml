version: '3.8'

services:

  app:
    build: .
    container_name: reverb-app
    restart: always
    environment:
      # Laravel Core
      APP_NAME: ReverbServer
      APP_ENV: production
      APP_DEBUG: "false"
      APP_URL: http://localhost:8080
      APP_KEY: ${APP_KEY:-} # Ser√° gerado no entrypoint, se vazio

      # Logs e comportamento
      LOG_CHANNEL: stack
      LOG_LEVEL: info

      # Broadcast / Reverb
      BROADCAST_DRIVER: pusher
      REVERB_APP_ID: ${REVERB_APP_ID}
      REVERB_APP_KEY: ${REVERB_APP_KEY}
      REVERB_APP_SECRET: ${REVERB_APP_SECRET}
      CACHE_STORE: ${CACHE_STORE:-array}
      REVERB_REDIS_CONNECTION: default
      REVERB_HOST: 0.0.0.0
      REVERB_PORT: 6001
      REVERB_SCHEME: http

      # Redis
      REDIS_CLIENT: phpredis
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}

      # Fallbacks para evitar erros
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_CONNECTION: sync

    volumes:
      - ./reverb-data:/var/www

  nginx:
    image: nginx:latest
    container_name: reverb-nginx
    restart: always
    ports:
      - "${NGINX_PORT:-8080}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/webroot:/var/www/certbot
      - ./reverb-data:/var/www
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    container_name: reverb-certbot
    restart: always
    volumes:
      - ./certbot/webroot:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done'"
